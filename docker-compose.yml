version: "3.8"

services:
  postgres:
    image: postgres:11
    container_name: todo_list_postgres
    ports:
      - "${DB_PORT}:5432"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - ./data:/var/lib/postgresql/data
    networks:
      - node_network

  proxy:
    restart: unless-stopped
    container_name: todo_list_proxy
    image: nginx
    ports:
      - ${NGINX_PORT}:80
    depends_on:
      - api
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - node_network

  frontend:
    build: ./frontend
    container_name: todo_list_frontend
    volumes:
      - ./frontend/src:/usr/src/app/src
    depends_on:
      - postgres
      - api
    ports:
      - '${FRONT_PORT}:3000'
    networks:
      - node_network

  api:
    build: ./backend
    container_name: todo_list_backend
    volumes:
      - ./backend/src:/usr/src/app/src
      - ./backend/package.json:/usr/src/app/package.json
      - ./backend/package-lock.json:/usr/src/app/package-lock.json
      - ./backend/.jest.config.js:/usr/src/app/.jest.config.js
    ports:
      - '${API_PORT}:4000'
    depends_on:
      - postgres
    stdin_open: true
    tty: true
    networks:
      - node_network

networks:
  node_network: